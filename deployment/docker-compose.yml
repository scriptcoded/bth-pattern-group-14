version: '3.9'

services:
  watchtower:
    image: containrrr/watchtower
    restart: always
    command:
      - '--label-enable'
      - '--interval=60'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/scriptcoded/.docker/config.json:/config.json

  traefik:
    image: traefik:v2.5
    restart: always
    container_name: traefik
    command:
      - '--log.level=DEBUG'
      - '--api.dashboard=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--entrypoints.web.http.redirections.entryPoint.scheme=https'
      - '--entrypoints.web.http.redirections.entrypoint.permanent=true'
      - '--certificatesresolvers.tlsresolver.acme.tlschallenge=true'
      # - '--certificatesresolvers.tlsresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory'
      - '--certificatesresolvers.tlsresolver.acme.email=malcolm.nihlen@gmail.com'
      - '--certificatesresolvers.tlsresolver.acme.storage=/letsencrypt/acme.json'
    labels:
      # To create user:password pair, it's possible to use this command:
      # echo $(htpasswd -nB user) | sed -e s/\\$/\\$\\$/g
      - traefik.enable=true
      - 'traefik.http.routers.dashboard.rule=Host(`traefik.doculys.tentamera.se`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))'
      - 'traefik.http.routers.dashboard.entrypoints=websecure'
      - 'traefik.http.routers.dashboard.tls.certresolver=tlsresolver'
      - 'traefik.http.routers.dashboard.service=api@internal'
      - 'traefik.http.routers.dashboard.middlewares=dashboard-auth'
      - 'traefik.http.middlewares.dashboard-auth.basicauth.users=scriptcoded:$$2y$$05$$O13NrAS4m5ccPa5WkCKml.pT/5M.5Imja9nfQ/eZThfNQqraCE65C'
    ports:
      - '443:443'
      - '80:80'
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  tentamera-web:
    image: index.docker.io/scriptcoded/tentamera-beta-doculys-web
    restart: always
    container_name: tentamera-web
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.tentamera-web.rule=Host(`doculys.tentamera.se`)
      - traefik.http.routers.tentamera-web.entrypoints=websecure
      - traefik.http.routers.tentamera-web.tls.certresolver=tlsresolver

  tentamera-api:
    image: index.docker.io/scriptcoded/tentamera-beta-doculys-api
    restart: always
    container_name: tentamera-api
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.tentamera-api.rule=Host(`api.doculys.tentamera.se`)
      - traefik.http.routers.tentamera-api.entrypoints=websecure
      - traefik.http.routers.tentamera-api.tls.certresolver=tlsresolver
    environment:
      - PORT=4000
      - HOST=0.0.0.0
      - DATABASE_URL=postgres://postgres:${POSTGRES_PASSWORD}@tentamera-db:5432/tentamera-beta-doculys?schema=public
      - S3_ENDPOINT=https://ams3.digitaloceanspaces.com/
      - S3_REGION=ams3
      - S3_BUCKET=malcolm-dev-tentamera-beta-doculys
      - DOCULYS_POPPLER_DIR=/usr/local/bin
      - S3_KEY
      - S3_SECRET
      - ADMIN_KEY

  tentamera-db:
    image: 'postgres:latest'
    restart: always
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD
