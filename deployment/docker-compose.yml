version: '3.9'

services:
  watchtower:
    image: containrrr/watchtower
    restart: always
    command:
      - '--label-enable'
      - '--interval=60'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/scriptcoded/.docker/config.json:/config.json

  traefik:
    image: traefik:v2.5
    restart: always
    container_name: traefik
    command:
      - '--log.level=DEBUG'
      - '--api.dashboard=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--entrypoints.web.http.redirections.entryPoint.scheme=https'
      - '--entrypoints.web.http.redirections.entrypoint.permanent=true'
      - '--certificatesresolvers.tlsresolver.acme.tlschallenge=true'
      # - '--certificatesresolvers.tlsresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory'
      - '--certificatesresolvers.tlsresolver.acme.email=malcolm.nihlen@gmail.com'
      - '--certificatesresolvers.tlsresolver.acme.storage=/letsencrypt/acme.json'
    labels:
      # To create user:password pair, it's possible to use this command:
      # echo $(htpasswd -nB user) | sed -e s/\\$/\\$\\$/g
      - traefik.enable=true
      - 'traefik.http.routers.dashboard.rule=Host(`traefik.elsp.nihlen.dev`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))'
      - 'traefik.http.routers.dashboard.entrypoints=websecure'
      - 'traefik.http.routers.dashboard.tls.certresolver=tlsresolver'
      - 'traefik.http.routers.dashboard.service=api@internal'
      - 'traefik.http.routers.dashboard.middlewares=dashboard-auth'
      - 'traefik.http.middlewares.dashboard-auth.basicauth.users=scriptcoded:$$2y$$05$$MQHVBdDglljo4loIsoqS4e5.NWSzJYiFshlV94kO8kcW.d0.ucvwa'
    ports:
      - '443:443'
      - '80:80'
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  elsp-web:
    image: index.docker.io/scriptcoded/bth-pattern-g14-web
    restart: always
    container_name: elsp-web
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.tentamera-web.rule=Host(`elsp.nihlen.dev`)
      - traefik.http.routers.tentamera-web.entrypoints=websecure
      - traefik.http.routers.tentamera-web.tls.certresolver=tlsresolver

  elsp-api:
    image: index.docker.io/scriptcoded/bth-pattern-g14-api
    restart: always
    container_name: elsp-api
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.tentamera-api.rule=Host(`api.elsp.nihlen.dev`)
      - traefik.http.routers.tentamera-api.entrypoints=websecure
      - traefik.http.routers.tentamera-api.tls.certresolver=tlsresolver
    environment:
      - NODE_ENV=production
      - SIMULATION_MODE=false
      - API_URL=http://localhost:4000
      - FRONTEND_URL=http://localhost:80
      - DATABASE_URL=mysql://root:${DATABASE_PASSWORD}@mysql:3306/pattern
      - REDIS_URL=redis://redis:6379
      - APP_SECRET
      - GITHUB_CLIENT_ID
      - GITHUB_CLIENT_SECRET
      - STRIPE_SECRET_KEY
      - STRIPE_PUBLISHABLE_KEY
      - STRIPE_WEBHOOK_SECRET

  mysql:
    image: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    ports:
      # Primarily used for migrations and debugging
      - "3306:3306"
    volumes:
      - /var/lib/mysql:/var/lib/mysql

  redis:
    image: redis
    restart: always
